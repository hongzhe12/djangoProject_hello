# example.com.conf
server {
    listen 80;

    server_name example.com;


    # HTTPS重定向
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name example.com;

    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;


    # 请求体大小限制
    client_max_body_size 30M;


    # 应用: appo
    location /o/app/ {
        proxy_pass http://127.0.0.1:8999/o/app/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-CSRFToken $http_x_csrf_token;
        proxy_redirect off;

        # CORS 支持
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';

        # 处理预检请求
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';
            add_header 'Content-Length' 0;
            return 204;
        }
    }



    # 静态文件
    location /o/app/static/ {
        alias /path/to/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=86400";
        autoindex off;
        try_files $uri $uri/ =404;
    }

    # 媒体文件
    location /o/app/media/ {
        alias /path/to/media/;
        expires 30d;
        add_header Cache-Control "public, max-age=604800";
        autoindex off;
        try_files $uri $uri/ =404;
    }

    # 应用: appt
    location /t/app/ {
        proxy_pass http://127.0.0.1:9000/t/app/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-CSRFToken $http_x_csrf_token;
        proxy_redirect off;

        # CORS 支持
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';

        # 处理预检请求
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';
            add_header 'Content-Length' 0;
            return 204;
        }
    }



    # 静态文件
    location /t/app/static/ {
        alias /path/to/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=86400";
        autoindex off;
        try_files $uri $uri/ =404;
    }

    # 媒体文件
    location /t/app/media/ {
        alias /path/to/media/;
        expires 30d;
        add_header Cache-Control "public, max-age=604800";
        autoindex off;
        try_files $uri $uri/ =404;
    }


    # 防止暴露 .git、.env 等敏感文件
    location ~ /\.(env|git|ht|svn) {
        deny all;
    }
}